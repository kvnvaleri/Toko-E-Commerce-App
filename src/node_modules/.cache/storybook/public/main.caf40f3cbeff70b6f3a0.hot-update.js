webpackHotUpdate("main",{

/***/ "./stories/GhostButton.jsx":
/*!*********************************!*\
  !*** ./stories/GhostButton.jsx ***!
  \*********************************/
/*! exports provided: GhostButton */
/*! exports used: GhostButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GhostButton; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ghostbutton_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ghostbutton.css */ "./stories/ghostbutton.css");
/* harmony import */ var _ghostbutton_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ghostbutton_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__);
var _excluded = ["Default", "backgroundColor", "size", "label"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




var GhostButton = function (_ref) {
  var Default = _ref.Default,
    backgroundColor = _ref.backgroundColor,
    size = _ref.size,
    label = _ref.label,
    props = _objectWithoutProperties(_ref, _excluded);
  var mode = Default ? 'storybook-ghostbutton--Default' : 'storybook-ghostbutton--secondary';
  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__["jsx"])("button", Object.assign({
    type: "button",
    className: ['storybook-ghostbutton', `storybook-ghostbutton--${size}`, mode].join(' '),
    style: backgroundColor && {
      backgroundColor: backgroundColor
    }
  }, props, {
    children: label
  }));
};
GhostButton.displayName = "GhostButton";
GhostButton.propTypes = {
  Default: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  backgroundColor: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['small', 'medium', 'large', 'larger', 'max-large']),
  label: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired
};
GhostButton.defaultProps = {
  backgroundColor: null,
  Default: false,
  size: 'medium'
};
GhostButton.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "GhostButton",
  "props": {
    "backgroundColor": {
      "defaultValue": {
        "value": "null",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "string"
      },
      "required": false
    },
    "Default": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "size": {
      "defaultValue": {
        "value": "'medium'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'small'",
          "computed": false
        }, {
          "value": "'medium'",
          "computed": false
        }, {
          "value": "'large'",
          "computed": false
        }, {
          "value": "'larger'",
          "computed": false
        }, {
          "value": "'max-large'",
          "computed": false
        }]
      },
      "required": false
    },
    "label": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": true
    }
  }
};
if (typeof STORYBOOK_REACT_CLASSES !== "undefined") {
  STORYBOOK_REACT_CLASSES["stories\\GhostButton.jsx"] = {
    name: "GhostButton",
    docgenInfo: GhostButton.__docgenInfo,
    path: "stories\\GhostButton.jsx"
  };
}

/***/ }),

/***/ "./stories/GhostButton.stories.jsx":
/*!*****************************************!*\
  !*** ./stories/GhostButton.stories.jsx ***!
  \*****************************************/
/*! exports provided: default, Default, Secondary, Pressed, Focused, Disabled */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Default", function() { return Default; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Secondary", function() { return Secondary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pressed", function() { return Pressed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Focused", function() { return Focused; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Disabled", function() { return Disabled; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GhostButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GhostButton */ "./stories/GhostButton.jsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "../node_modules/react/jsx-runtime.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__);
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import React from 'react';\n\nimport { GhostButton } from './GhostButton';\n\nexport default {\n  title: 'Example/GhostButton',\n  component: GhostButton,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n};\n\nconst Template = (args) => <GhostButton {...args} />;\n\nexport const Default = Template.bind({});\n\nDefault.args = {\n  Default: true,\n  label: '< Button >',\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  label: '< Button >',\n};\n\nexport const Pressed = Template.bind({});\nPressed.args = {\n  label: '< Button >',\n};\n\nexport const Focused = Template.bind({});\nFocused.args = {\n  label: '< Button >',\n};\n\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  label: '< Button >',\n};\n";
// @ts-ignore
var __LOCATIONS_MAP__ = {
  "Default": {
    "startLoc": {
      "col": 17,
      "line": 13
    },
    "endLoc": {
      "col": 52,
      "line": 13
    },
    "startBody": {
      "col": 17,
      "line": 13
    },
    "endBody": {
      "col": 52,
      "line": 13
    }
  },
  "Secondary": {
    "startLoc": {
      "col": 17,
      "line": 13
    },
    "endLoc": {
      "col": 52,
      "line": 13
    },
    "startBody": {
      "col": 17,
      "line": 13
    },
    "endBody": {
      "col": 52,
      "line": 13
    }
  },
  "Pressed": {
    "startLoc": {
      "col": 17,
      "line": 13
    },
    "endLoc": {
      "col": 52,
      "line": 13
    },
    "startBody": {
      "col": 17,
      "line": 13
    },
    "endBody": {
      "col": 52,
      "line": 13
    }
  },
  "Focused": {
    "startLoc": {
      "col": 17,
      "line": 13
    },
    "endLoc": {
      "col": 52,
      "line": 13
    },
    "startBody": {
      "col": 17,
      "line": 13
    },
    "endBody": {
      "col": 52,
      "line": 13
    }
  },
  "Disabled": {
    "startLoc": {
      "col": 17,
      "line": 13
    },
    "endLoc": {
      "col": 52,
      "line": 13
    },
    "startBody": {
      "col": 17,
      "line": 13
    },
    "endBody": {
      "col": 52,
      "line": 13
    }
  }
};



/* harmony default export */ __webpack_exports__["default"] = ({
  title: 'Example/GhostButton',
  component: _GhostButton__WEBPACK_IMPORTED_MODULE_1__[/* GhostButton */ "a"],
  argTypes: {
    backgroundColor: {
      control: 'color'
    }
  }
});
var Template = function (args) {
  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__["jsx"])(_GhostButton__WEBPACK_IMPORTED_MODULE_1__[/* GhostButton */ "a"], Object.assign({}, args));
};
Template.displayName = "Template";
var Default = Template.bind({});
;
Default.args = {
  Default: true,
  label: '< Button >'
};
var Secondary = Template.bind({});
;
Secondary.args = {
  label: '< Button >'
};
var Pressed = Template.bind({});
;
Pressed.args = {
  label: '< Button >'
};
var Focused = Template.bind({});
;
Focused.args = {
  label: '< Button >'
};
var Disabled = Template.bind({});
Disabled.args = {
  label: '< Button >'
};
Default.parameters = Object.assign({
  storySource: {
    source: "(args) => <GhostButton {...args} />"
  }
}, Default.parameters);
Secondary.parameters = Object.assign({
  storySource: {
    source: "(args) => <GhostButton {...args} />"
  }
}, Secondary.parameters);
Pressed.parameters = Object.assign({
  storySource: {
    source: "(args) => <GhostButton {...args} />"
  }
}, Pressed.parameters);
Focused.parameters = Object.assign({
  storySource: {
    source: "(args) => <GhostButton {...args} />"
  }
}, Focused.parameters);
Disabled.parameters = Object.assign({
  storySource: {
    source: "(args) => <GhostButton {...args} />"
  }
}, Disabled.parameters);

/***/ })

})
//# sourceMappingURL=main.caf40f3cbeff70b6f3a0.hot-update.js.map